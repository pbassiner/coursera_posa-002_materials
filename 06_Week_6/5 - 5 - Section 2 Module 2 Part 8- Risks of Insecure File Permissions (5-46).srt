1
00:00:00,000 --> 00:00:08,311
[MUSIC]

2
00:00:08,311 --> 00:00:15,155
Another mistake that developers make
sometimes, is that they will actually

3
00:00:15,155 --> 00:00:23,050
go and store data to this private region,
on their device's data directory.

4
00:00:23,050 --> 00:00:26,067
But, they'll go and store it in a way with

5
00:00:26,067 --> 00:00:31,640
permissions that allow it to be accessed
by other applications.

6
00:00:31,640 --> 00:00:34,248
So by default, when you store data to

7
00:00:34,248 --> 00:00:38,625
an app's private data directory, it's
associated with the

8
00:00:38,625 --> 00:00:41,148
user account of your app, and set to

9
00:00:41,148 --> 00:00:45,292
a permission that prevents other apps from
accessing it.

10
00:00:45,292 --> 00:00:50,442
But you as the developer have the ability
to override those permissions,

11
00:00:50,442 --> 00:00:55,603
and make it so that even though you save
it to your private data directory.

12
00:00:55,603 --> 00:00:58,746
You give permissions to that file that
allow other apps

13
00:00:58,746 --> 00:01:02,940
to go and access it within your private
data directory.

14
00:01:02,940 --> 00:01:06,996
So, in this code example here that we're
looking at, we're

15
00:01:06,996 --> 00:01:11,520
actually opening a file and saving it to
our private data directory.

16
00:01:11,520 --> 00:01:14,860
But we're saving it with mode world
readable.

17
00:01:14,860 --> 00:01:18,301
And what this means is, is that any other
app on the device can

18
00:01:18,301 --> 00:01:23,040
actually get access to that file, even
though it's stored in our data directory.

19
00:01:24,080 --> 00:01:27,120
And you may think, well, this would never
happen, I would never do this.

20
00:01:27,120 --> 00:01:30,577
Skype actually had a bug where incorrect
permissions were

21
00:01:30,577 --> 00:01:33,831
being set on the SQLite database that they
were using.

22
00:01:33,831 --> 00:01:36,475
And you can go and look at the details of
this bug.

23
00:01:36,475 --> 00:01:43,430
But it exposed data and important settings
from that app to other apps on a device.

24
00:01:43,430 --> 00:01:45,110
Now, here we see.

25
00:01:45,110 --> 00:01:49,823
The actual, case where they're taking this
output stream, that's been created.

26
00:01:49,823 --> 00:01:53,861
And it's been created world readable, and
then writing the secret,

27
00:01:53,861 --> 00:01:58,730
to the output stream and saving this data,
to the disk, incorrectly.

28
00:01:58,730 --> 00:02:01,672
So, if we look at the overall chain of,

29
00:02:01,672 --> 00:02:05,788
of events that took place from the
developer's code.

30
00:02:05,788 --> 00:02:10,127
That allowed this vulnerability to occur
is we start with a

31
00:02:10,127 --> 00:02:15,095
secret setting, so some data that we don't
really want exposed.

32
00:02:15,095 --> 00:02:19,094
We then unfortunately begin saving it by
opening it

33
00:02:19,094 --> 00:02:23,390
in a output stream to a world readable
file.

34
00:02:23,390 --> 00:02:26,770
And then we actually write that data to
that world readable file.

35
00:02:27,810 --> 00:02:30,000
And so anytime like when we see

36
00:02:30,000 --> 00:02:34,389
external storage directory, we see mode
world readable.

37
00:02:34,389 --> 00:02:37,197
We need to really think about, do we plan
on

38
00:02:37,197 --> 00:02:41,700
having this data accessed by any other app
on the device?

39
00:02:41,700 --> 00:02:42,810
Do we really want that?

40
00:02:44,110 --> 00:02:46,792
And if the answer is no, we don't want
that data

41
00:02:46,792 --> 00:02:50,026
accessed by any other data or any other
app on the device.

42
00:02:50,026 --> 00:02:53,657
That that data isn't always something that
should be public, then

43
00:02:53,657 --> 00:02:57,250
we need to go and re-think how we're
saving that data.

44
00:02:57,250 --> 00:03:01,222
The way that we really should have been
implementing this save settings

45
00:03:01,222 --> 00:03:06,000
mechanism, if we wanted to keep those
settings private to that app.

46
00:03:06,000 --> 00:03:08,260
We should have used mode private.

47
00:03:08,260 --> 00:03:11,700
Which tells Android that that data is
private

48
00:03:11,700 --> 00:03:14,580
to your application and should not be
shared.

49
00:03:14,580 --> 00:03:18,609
So in this case, we actually are saving
settings to the

50
00:03:18,609 --> 00:03:23,020
device in a way that other apps can't get
access to.

51
00:03:23,020 --> 00:03:27,249
If we see mode private, we should assume
that that data that

52
00:03:27,249 --> 00:03:32,085
we're storing to that location will not be
accessed by other apps.

53
00:03:32,085 --> 00:03:34,859
But what we do need to remember, is

54
00:03:34,859 --> 00:03:38,880
that just because data can't be accessed
by other

55
00:03:38,880 --> 00:03:42,230
apps on the device, doesn't mean that it

56
00:03:42,230 --> 00:03:46,173
can't be accessed by other users on the
device.

57
00:03:46,173 --> 00:03:49,476
Just because we're saving data that is not

58
00:03:49,476 --> 00:03:53,329
accessible to other apps on the device,
doesn't

59
00:03:53,329 --> 00:03:56,631
mean that the owner or whoever has
physical

60
00:03:56,631 --> 00:03:59,950
access to the device can't see that data.

61
00:03:59,950 --> 00:04:02,021
And this unfortunately is a, a mistake

62
00:04:02,021 --> 00:04:05,390
that developers commonly make as we've
discussed.

63
00:04:05,390 --> 00:04:09,196
Is they assume that something that is
stored by their app that isn't

64
00:04:09,196 --> 00:04:14,420
visible to other apps is also not visible
to whoever physically has the device.

65
00:04:14,420 --> 00:04:16,450
And that's not actually the case.

66
00:04:16,450 --> 00:04:19,742
If you are holding a device, there are
lots of attacks and ways

67
00:04:19,742 --> 00:04:23,874
that you can, for example, route the
device and plug it into your computer.

68
00:04:23,874 --> 00:04:26,340
And look at an app's private data.

69
00:04:26,340 --> 00:04:31,510
So you shouldn't take anything that is
your private data and store it

70
00:04:32,550 --> 00:04:37,470
in your app or on the devices of your
users.

71
00:04:37,470 --> 00:04:42,052
If you give your app access to your own
private developer

72
00:04:42,052 --> 00:04:47,430
data, you're then distributing that data
to all of your users.

73
00:04:47,430 --> 00:04:50,585
And essentially saying, I want all of the
users of my

74
00:04:50,585 --> 00:04:54,870
app that I wrote to have access to my
private developer data.

75
00:04:54,870 --> 00:04:58,160
Anything that you put into your app or
give it at runtime, the

76
00:04:58,160 --> 00:05:02,439
user of that app or the holder of that
device potentially has access to.

77
00:05:04,120 --> 00:05:08,284
So in this case, for example, doing
something that's very commonly

78
00:05:08,284 --> 00:05:13,070
done, and Amazon actually scans for now in
GitHub and other locations.

79
00:05:13,070 --> 00:05:18,415
Like storing your Amazon web services
private key in your app or storing

80
00:05:18,415 --> 00:05:23,200
it on the disk of a device that your app
is installed on.

81
00:05:23,200 --> 00:05:28,550
Even if you go and download that key after
installation and store it, you're

82
00:05:28,550 --> 00:05:33,530
still exposing that private developer data
to all of the users of your app.

83
00:05:33,530 --> 00:05:36,603
So, you don't need to take data that
belongs to you

84
00:05:36,603 --> 00:05:39,611
and is private to you and every give it to
your app.

85
00:05:39,611 --> 00:05:41,809
Or store it on a device that your app

86
00:05:41,809 --> 00:05:45,420
is installed on, even privately, and
assume that it's safe.

